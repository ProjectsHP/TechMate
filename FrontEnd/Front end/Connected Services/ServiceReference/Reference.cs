//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Front_end.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserClass", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class UserClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((this.PhoneNoField.Equals(value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompatibilityClass", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class CompatibilityClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildCompatibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CpuTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GraphicsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RamTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseId {
            get {
                return this.BaseIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseIdField, value) != true)) {
                    this.BaseIdField = value;
                    this.RaisePropertyChanged("BaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildCompatibility {
            get {
                return this.BuildCompatibilityField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildCompatibilityField, value) != true)) {
                    this.BuildCompatibilityField = value;
                    this.RaisePropertyChanged("BuildCompatibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CpuType {
            get {
                return this.CpuTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CpuTypeField, value) != true)) {
                    this.CpuTypeField = value;
                    this.RaisePropertyChanged("CpuType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GraphicsType {
            get {
                return this.GraphicsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GraphicsTypeField, value) != true)) {
                    this.GraphicsTypeField = value;
                    this.RaisePropertyChanged("GraphicsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RamType {
            get {
                return this.RamTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RamTypeField, value) != true)) {
                    this.RamTypeField = value;
                    this.RaisePropertyChanged("RamType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageType {
            get {
                return this.StorageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageTypeField, value) != true)) {
                    this.StorageTypeField = value;
                    this.RaisePropertyChanged("StorageType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cellNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cellNo {
            get {
                return this.cellNoField;
            }
            set {
                if ((object.ReferenceEquals(this.cellNoField, value) != true)) {
                    this.cellNoField = value;
                    this.RaisePropertyChanged("cellNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.surnameField, value) != true)) {
                    this.surnameField = value;
                    this.RaisePropertyChanged("surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userType {
            get {
                return this.userTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.userTypeField, value) != true)) {
                    this.userTypeField = value;
                    this.RaisePropertyChanged("userType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Component", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class Component : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string availabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> build_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string compatibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> intPriceFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string availability {
            get {
                return this.availabilityField;
            }
            set {
                if ((object.ReferenceEquals(this.availabilityField, value) != true)) {
                    this.availabilityField = value;
                    this.RaisePropertyChanged("availability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> build_id {
            get {
                return this.build_idField;
            }
            set {
                if ((this.build_idField.Equals(value) != true)) {
                    this.build_idField = value;
                    this.RaisePropertyChanged("build_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string compatibility {
            get {
                return this.compatibilityField;
            }
            set {
                if ((object.ReferenceEquals(this.compatibilityField, value) != true)) {
                    this.compatibilityField = value;
                    this.RaisePropertyChanged("compatibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image {
            get {
                return this.imageField;
            }
            set {
                if ((object.ReferenceEquals(this.imageField, value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> intPriceFormat {
            get {
                return this.intPriceFormatField;
            }
            set {
                if ((this.intPriceFormatField.Equals(value) != true)) {
                    this.intPriceFormatField = value;
                    this.RaisePropertyChanged("intPriceFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string price {
            get {
                return this.priceField;
            }
            set {
                if ((object.ReferenceEquals(this.priceField, value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildClass", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class BuildClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.Component BaseCaseComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Build_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompatibilityStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.Component CpuComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.Component GraphicsComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.Component RamComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.Component StorageComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_build_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.Component BaseCaseComponent {
            get {
                return this.BaseCaseComponentField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCaseComponentField, value) != true)) {
                    this.BaseCaseComponentField = value;
                    this.RaisePropertyChanged("BaseCaseComponent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Build_id {
            get {
                return this.Build_idField;
            }
            set {
                if ((object.ReferenceEquals(this.Build_idField, value) != true)) {
                    this.Build_idField = value;
                    this.RaisePropertyChanged("Build_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompatibilityStatus {
            get {
                return this.CompatibilityStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CompatibilityStatusField, value) != true)) {
                    this.CompatibilityStatusField = value;
                    this.RaisePropertyChanged("CompatibilityStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.Component CpuComponent {
            get {
                return this.CpuComponentField;
            }
            set {
                if ((object.ReferenceEquals(this.CpuComponentField, value) != true)) {
                    this.CpuComponentField = value;
                    this.RaisePropertyChanged("CpuComponent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.Component GraphicsComponent {
            get {
                return this.GraphicsComponentField;
            }
            set {
                if ((object.ReferenceEquals(this.GraphicsComponentField, value) != true)) {
                    this.GraphicsComponentField = value;
                    this.RaisePropertyChanged("GraphicsComponent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.Component RamComponent {
            get {
                return this.RamComponentField;
            }
            set {
                if ((object.ReferenceEquals(this.RamComponentField, value) != true)) {
                    this.RamComponentField = value;
                    this.RaisePropertyChanged("RamComponent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.Component StorageComponent {
            get {
                return this.StorageComponentField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageComponentField, value) != true)) {
                    this.StorageComponentField = value;
                    this.RaisePropertyChanged("StorageComponent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalPriceField, value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_build_id {
            get {
                return this.User_build_idField;
            }
            set {
                if ((object.ReferenceEquals(this.User_build_idField, value) != true)) {
                    this.User_build_idField = value;
                    this.RaisePropertyChanged("User_build_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliveryAddress", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class DeliveryAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string provinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string suburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> user_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string province {
            get {
                return this.provinceField;
            }
            set {
                if ((object.ReferenceEquals(this.provinceField, value) != true)) {
                    this.provinceField = value;
                    this.RaisePropertyChanged("province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string streetUnit {
            get {
                return this.streetUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.streetUnitField, value) != true)) {
                    this.streetUnitField = value;
                    this.RaisePropertyChanged("streetUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string suburb {
            get {
                return this.suburbField;
            }
            set {
                if ((object.ReferenceEquals(this.suburbField, value) != true)) {
                    this.suburbField = value;
                    this.RaisePropertyChanged("suburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.zipCodeField, value) != true)) {
                    this.zipCodeField = value;
                    this.RaisePropertyChanged("zipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderClass", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class OrderClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.DeliveryAddress DeliveryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.CartItem[] ListOfCartObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.Component[] ListOfComponentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentMadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Front_end.ServiceReference.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((this.CardNumberField.Equals(value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.DeliveryAddress DeliveryAddress {
            get {
                return this.DeliveryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryAddressField, value) != true)) {
                    this.DeliveryAddressField = value;
                    this.RaisePropertyChanged("DeliveryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.CartItem[] ListOfCartObj {
            get {
                return this.ListOfCartObjField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfCartObjField, value) != true)) {
                    this.ListOfCartObjField = value;
                    this.RaisePropertyChanged("ListOfCartObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.Component[] ListOfComponents {
            get {
                return this.ListOfComponentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfComponentsField, value) != true)) {
                    this.ListOfComponentsField = value;
                    this.RaisePropertyChanged("ListOfComponents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderStatusField, value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMade {
            get {
                return this.PaymentMadeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentMadeField, value) != true)) {
                    this.PaymentMadeField = value;
                    this.RaisePropertyChanged("PaymentMade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItems {
            get {
                return this.TotalItemsField;
            }
            set {
                if ((this.TotalItemsField.Equals(value) != true)) {
                    this.TotalItemsField = value;
                    this.RaisePropertyChanged("TotalItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Front_end.ServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartItem", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class CartItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cart_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> component_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cart_id {
            get {
                return this.cart_idField;
            }
            set {
                if ((this.cart_idField.Equals(value) != true)) {
                    this.cart_idField = value;
                    this.RaisePropertyChanged("cart_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> component_id {
            get {
                return this.component_idField;
            }
            set {
                if ((this.component_idField.Equals(value) != true)) {
                    this.component_idField = value;
                    this.RaisePropertyChanged("component_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cartIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string orderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> paymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paymentMadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> userAddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cartId {
            get {
                return this.cartIdField;
            }
            set {
                if ((this.cartIdField.Equals(value) != true)) {
                    this.cartIdField = value;
                    this.RaisePropertyChanged("cartId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.dateCreatedField, value) != true)) {
                    this.dateCreatedField = value;
                    this.RaisePropertyChanged("dateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string orderStatus {
            get {
                return this.orderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.orderStatusField, value) != true)) {
                    this.orderStatusField = value;
                    this.RaisePropertyChanged("orderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> paymentId {
            get {
                return this.paymentIdField;
            }
            set {
                if ((this.paymentIdField.Equals(value) != true)) {
                    this.paymentIdField = value;
                    this.RaisePropertyChanged("paymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paymentMade {
            get {
                return this.paymentMadeField;
            }
            set {
                if ((object.ReferenceEquals(this.paymentMadeField, value) != true)) {
                    this.paymentMadeField = value;
                    this.RaisePropertyChanged("paymentMade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> userAddressId {
            get {
                return this.userAddressIdField;
            }
            set {
                if ((this.userAddressIdField.Equals(value) != true)) {
                    this.userAddressIdField = value;
                    this.RaisePropertyChanged("userAddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Compatibility", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Server_")]
    [System.SerializableAttribute()]
    public partial class Compatibility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cpuTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> desktopCase_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string graphicsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ramTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string storageTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cpuType {
            get {
                return this.cpuTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.cpuTypeField, value) != true)) {
                    this.cpuTypeField = value;
                    this.RaisePropertyChanged("cpuType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> desktopCase_id {
            get {
                return this.desktopCase_idField;
            }
            set {
                if ((this.desktopCase_idField.Equals(value) != true)) {
                    this.desktopCase_idField = value;
                    this.RaisePropertyChanged("desktopCase_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string graphicsType {
            get {
                return this.graphicsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.graphicsTypeField, value) != true)) {
                    this.graphicsTypeField = value;
                    this.RaisePropertyChanged("graphicsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ramType {
            get {
                return this.ramTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ramTypeField, value) != true)) {
                    this.ramTypeField = value;
                    this.RaisePropertyChanged("ramType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string storageType {
            get {
                return this.storageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.storageTypeField, value) != true)) {
                    this.storageTypeField = value;
                    this.RaisePropertyChanged("storageType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoginSOAP", ReplyAction="http://tempuri.org/IService/LoginSOAPResponse")]
        Front_end.ServiceReference.UserClass LoginSOAP(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoginSOAP", ReplyAction="http://tempuri.org/IService/LoginSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.UserClass> LoginSOAPAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HashPasswordSOAP", ReplyAction="http://tempuri.org/IService/HashPasswordSOAPResponse")]
        string HashPasswordSOAP(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HashPasswordSOAP", ReplyAction="http://tempuri.org/IService/HashPasswordSOAPResponse")]
        System.Threading.Tasks.Task<string> HashPasswordSOAPAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterSOAP", ReplyAction="http://tempuri.org/IService/RegisterSOAPResponse")]
        int RegisterSOAP(string name, string surname, string cellNo, string gender, string email, string password, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterSOAP", ReplyAction="http://tempuri.org/IService/RegisterSOAPResponse")]
        System.Threading.Tasks.Task<int> RegisterSOAPAsync(string name, string surname, string cellNo, string gender, string email, string password, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditUserSOAP", ReplyAction="http://tempuri.org/IService/EditUserSOAPResponse")]
        int EditUserSOAP(string name, string surname, string cellNo, string gender, string email, string activeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditUserSOAP", ReplyAction="http://tempuri.org/IService/EditUserSOAPResponse")]
        System.Threading.Tasks.Task<int> EditUserSOAPAsync(string name, string surname, string cellNo, string gender, string email, string activeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditComponentSOAP", ReplyAction="http://tempuri.org/IService/EditComponentSOAPResponse")]
        int EditComponentSOAP(string compId, string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditComponentSOAP", ReplyAction="http://tempuri.org/IService/EditComponentSOAPResponse")]
        System.Threading.Tasks.Task<int> EditComponentSOAPAsync(string compId, string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateStockSOAP", ReplyAction="http://tempuri.org/IService/UpdateStockSOAPResponse")]
        int UpdateStockSOAP(string componentId, string updateType, string quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateStockSOAP", ReplyAction="http://tempuri.org/IService/UpdateStockSOAPResponse")]
        System.Threading.Tasks.Task<int> UpdateStockSOAPAsync(string componentId, string updateType, string quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FulfilOrderSOAP", ReplyAction="http://tempuri.org/IService/FulfilOrderSOAPResponse")]
        int FulfilOrderSOAP(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FulfilOrderSOAP", ReplyAction="http://tempuri.org/IService/FulfilOrderSOAPResponse")]
        System.Threading.Tasks.Task<int> FulfilOrderSOAPAsync(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RejectOrderSOAP", ReplyAction="http://tempuri.org/IService/RejectOrderSOAPResponse")]
        int RejectOrderSOAP(string orderId, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RejectOrderSOAP", ReplyAction="http://tempuri.org/IService/RejectOrderSOAPResponse")]
        System.Threading.Tasks.Task<int> RejectOrderSOAPAsync(string orderId, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/VerifyBuildCompatibilitySOAP", ReplyAction="http://tempuri.org/IService/VerifyBuildCompatibilitySOAPResponse")]
        Front_end.ServiceReference.CompatibilityClass VerifyBuildCompatibilitySOAP(string desktopBaseId, string ram, string cpu, string storage, string graphics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/VerifyBuildCompatibilitySOAP", ReplyAction="http://tempuri.org/IService/VerifyBuildCompatibilitySOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.CompatibilityClass> VerifyBuildCompatibilitySOAPAsync(string desktopBaseId, string ram, string cpu, string storage, string graphics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUserSOAP", ReplyAction="http://tempuri.org/IService/DeleteUserSOAPResponse")]
        int DeleteUserSOAP(string activeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUserSOAP", ReplyAction="http://tempuri.org/IService/DeleteUserSOAPResponse")]
        System.Threading.Tasks.Task<int> DeleteUserSOAPAsync(string activeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteComponentSOAP", ReplyAction="http://tempuri.org/IService/DeleteComponentSOAPResponse")]
        int DeleteComponentSOAP(string compId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteComponentSOAP", ReplyAction="http://tempuri.org/IService/DeleteComponentSOAPResponse")]
        System.Threading.Tasks.Task<int> DeleteComponentSOAPAsync(string compId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StoreUserAddressSOAP", ReplyAction="http://tempuri.org/IService/StoreUserAddressSOAPResponse")]
        int StoreUserAddressSOAP(string userId, string country, string province, string city, string streetUnit, string name, string surname, string cellPhone, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StoreUserAddressSOAP", ReplyAction="http://tempuri.org/IService/StoreUserAddressSOAPResponse")]
        System.Threading.Tasks.Task<int> StoreUserAddressSOAPAsync(string userId, string country, string province, string city, string streetUnit, string name, string surname, string cellPhone, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchActiveUserSOAP", ReplyAction="http://tempuri.org/IService/FetchActiveUserSOAPResponse")]
        Front_end.ServiceReference.User FetchActiveUserSOAP(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchActiveUserSOAP", ReplyAction="http://tempuri.org/IService/FetchActiveUserSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.User> FetchActiveUserSOAPAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchSingleUserBuildSOAP", ReplyAction="http://tempuri.org/IService/FetchSingleUserBuildSOAPResponse")]
        Front_end.ServiceReference.Component[] FetchSingleUserBuildSOAP(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchSingleUserBuildSOAP", ReplyAction="http://tempuri.org/IService/FetchSingleUserBuildSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchSingleUserBuildSOAPAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchAllUsersSOAP", ReplyAction="http://tempuri.org/IService/FetchAllUsersSOAPResponse")]
        Front_end.ServiceReference.User[] FetchAllUsersSOAP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchAllUsersSOAP", ReplyAction="http://tempuri.org/IService/FetchAllUsersSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.User[]> FetchAllUsersSOAPAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchRandomComponentsSOAP", ReplyAction="http://tempuri.org/IService/FetchRandomComponentsSOAPResponse")]
        Front_end.ServiceReference.Component[] FetchRandomComponentsSOAP(string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchRandomComponentsSOAP", ReplyAction="http://tempuri.org/IService/FetchRandomComponentsSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchRandomComponentsSOAPAsync(string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchComponentsByCategorySOAP", ReplyAction="http://tempuri.org/IService/FetchComponentsByCategorySOAPResponse")]
        Front_end.ServiceReference.Component[] FetchComponentsByCategorySOAP(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchComponentsByCategorySOAP", ReplyAction="http://tempuri.org/IService/FetchComponentsByCategorySOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchComponentsByCategorySOAPAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchTopComponentsSOAP", ReplyAction="http://tempuri.org/IService/FetchTopComponentsSOAPResponse")]
        Front_end.ServiceReference.Component[] FetchTopComponentsSOAP(string category, string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchTopComponentsSOAP", ReplyAction="http://tempuri.org/IService/FetchTopComponentsSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchTopComponentsSOAPAsync(string category, string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchBuildSOAP", ReplyAction="http://tempuri.org/IService/FetchBuildSOAPResponse")]
        Front_end.ServiceReference.Component[] FetchBuildSOAP(string build_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchBuildSOAP", ReplyAction="http://tempuri.org/IService/FetchBuildSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchBuildSOAPAsync(string build_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchComponentSOAP", ReplyAction="http://tempuri.org/IService/FetchComponentSOAPResponse")]
        Front_end.ServiceReference.Component FetchComponentSOAP(string component_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchComponentSOAP", ReplyAction="http://tempuri.org/IService/FetchComponentSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component> FetchComponentSOAPAsync(string component_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchSingleComponentByImageSOAP", ReplyAction="http://tempuri.org/IService/FetchSingleComponentByImageSOAPResponse")]
        Front_end.ServiceReference.Component[] FetchSingleComponentByImageSOAP(string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchSingleComponentByImageSOAP", ReplyAction="http://tempuri.org/IService/FetchSingleComponentByImageSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchSingleComponentByImageSOAPAsync(string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateComponentSOAP", ReplyAction="http://tempuri.org/IService/CreateComponentSOAPResponse")]
        int CreateComponentSOAP(string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateComponentSOAP", ReplyAction="http://tempuri.org/IService/CreateComponentSOAPResponse")]
        System.Threading.Tasks.Task<int> CreateComponentSOAPAsync(string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBuildSOAP", ReplyAction="http://tempuri.org/IService/CreateBuildSOAPResponse")]
        int CreateBuildSOAP(string user_id, string desktop_id, string cpu_id, string storage_id, string graphics_id, string ram_id, string compatibilityStatus, string totalPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBuildSOAP", ReplyAction="http://tempuri.org/IService/CreateBuildSOAPResponse")]
        System.Threading.Tasks.Task<int> CreateBuildSOAPAsync(string user_id, string desktop_id, string cpu_id, string storage_id, string graphics_id, string ram_id, string compatibilityStatus, string totalPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchAllUserBuildsSOAP", ReplyAction="http://tempuri.org/IService/FetchAllUserBuildsSOAPResponse")]
        Front_end.ServiceReference.BuildClass[] FetchAllUserBuildsSOAP(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchAllUserBuildsSOAP", ReplyAction="http://tempuri.org/IService/FetchAllUserBuildsSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.BuildClass[]> FetchAllUserBuildsSOAPAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchUserAddressSOAP", ReplyAction="http://tempuri.org/IService/FetchUserAddressSOAPResponse")]
        Front_end.ServiceReference.DeliveryAddress FetchUserAddressSOAP(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchUserAddressSOAP", ReplyAction="http://tempuri.org/IService/FetchUserAddressSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.DeliveryAddress> FetchUserAddressSOAPAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchOrderSOAP", ReplyAction="http://tempuri.org/IService/FetchOrderSOAPResponse")]
        Front_end.ServiceReference.OrderClass FetchOrderSOAP(string userId, string orderId, string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchOrderSOAP", ReplyAction="http://tempuri.org/IService/FetchOrderSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.OrderClass> FetchOrderSOAPAsync(string userId, string orderId, string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchOrderByIdSOAP", ReplyAction="http://tempuri.org/IService/FetchOrderByIdSOAPResponse")]
        Front_end.ServiceReference.Order FetchOrderByIdSOAP(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchOrderByIdSOAP", ReplyAction="http://tempuri.org/IService/FetchOrderByIdSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Order> FetchOrderByIdSOAPAsync(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchCaseCompatibilitySOAP", ReplyAction="http://tempuri.org/IService/FetchCaseCompatibilitySOAPResponse")]
        Front_end.ServiceReference.Compatibility FetchCaseCompatibilitySOAP(string componentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchCaseCompatibilitySOAP", ReplyAction="http://tempuri.org/IService/FetchCaseCompatibilitySOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Compatibility> FetchCaseCompatibilitySOAPAsync(string componentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchAllUserOrdersSOAP", ReplyAction="http://tempuri.org/IService/FetchAllUserOrdersSOAPResponse")]
        Front_end.ServiceReference.Order[] FetchAllUserOrdersSOAP(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchAllUserOrdersSOAP", ReplyAction="http://tempuri.org/IService/FetchAllUserOrdersSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Order[]> FetchAllUserOrdersSOAPAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchAllOrdersSOAP", ReplyAction="http://tempuri.org/IService/FetchAllOrdersSOAPResponse")]
        Front_end.ServiceReference.Order[] FetchAllOrdersSOAP(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchAllOrdersSOAP", ReplyAction="http://tempuri.org/IService/FetchAllOrdersSOAPResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Order[]> FetchAllOrdersSOAPAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckoutOrderSOAP", ReplyAction="http://tempuri.org/IService/CheckoutOrderSOAPResponse")]
        int CheckoutOrderSOAP(string userId, string orderId, string cardId, string paymentId, string userAddressId, string totalPrice, string totalItems, string paymentMade, string orderStatus, int[] listOfCartItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckoutOrderSOAP", ReplyAction="http://tempuri.org/IService/CheckoutOrderSOAPResponse")]
        System.Threading.Tasks.Task<int> CheckoutOrderSOAPAsync(string userId, string orderId, string cardId, string paymentId, string userAddressId, string totalPrice, string totalItems, string paymentMade, string orderStatus, int[] listOfCartItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCartSOAP", ReplyAction="http://tempuri.org/IService/SaveCartSOAPResponse")]
        int SaveCartSOAP(string userId, string buildId, string totalPrice, string discountSaved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCartSOAP", ReplyAction="http://tempuri.org/IService/SaveCartSOAPResponse")]
        System.Threading.Tasks.Task<int> SaveCartSOAPAsync(string userId, string buildId, string totalPrice, string discountSaved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCartItemsSOAP", ReplyAction="http://tempuri.org/IService/SaveCartItemsSOAPResponse")]
        int SaveCartItemsSOAP(string componentId, string cartId, string quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCartItemsSOAP", ReplyAction="http://tempuri.org/IService/SaveCartItemsSOAPResponse")]
        System.Threading.Tasks.Task<int> SaveCartItemsSOAPAsync(string componentId, string cartId, string quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveOrderSOAP", ReplyAction="http://tempuri.org/IService/SaveOrderSOAPResponse")]
        int SaveOrderSOAP(string cartId, string userAddressId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveOrderSOAP", ReplyAction="http://tempuri.org/IService/SaveOrderSOAPResponse")]
        System.Threading.Tasks.Task<int> SaveOrderSOAPAsync(string cartId, string userAddressId, string userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Front_end.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Front_end.ServiceReference.IService>, Front_end.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Front_end.ServiceReference.UserClass LoginSOAP(string email, string password) {
            return base.Channel.LoginSOAP(email, password);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.UserClass> LoginSOAPAsync(string email, string password) {
            return base.Channel.LoginSOAPAsync(email, password);
        }
        
        public string HashPasswordSOAP(string password) {
            return base.Channel.HashPasswordSOAP(password);
        }
        
        public System.Threading.Tasks.Task<string> HashPasswordSOAPAsync(string password) {
            return base.Channel.HashPasswordSOAPAsync(password);
        }
        
        public int RegisterSOAP(string name, string surname, string cellNo, string gender, string email, string password, string userType) {
            return base.Channel.RegisterSOAP(name, surname, cellNo, gender, email, password, userType);
        }
        
        public System.Threading.Tasks.Task<int> RegisterSOAPAsync(string name, string surname, string cellNo, string gender, string email, string password, string userType) {
            return base.Channel.RegisterSOAPAsync(name, surname, cellNo, gender, email, password, userType);
        }
        
        public int EditUserSOAP(string name, string surname, string cellNo, string gender, string email, string activeId) {
            return base.Channel.EditUserSOAP(name, surname, cellNo, gender, email, activeId);
        }
        
        public System.Threading.Tasks.Task<int> EditUserSOAPAsync(string name, string surname, string cellNo, string gender, string email, string activeId) {
            return base.Channel.EditUserSOAPAsync(name, surname, cellNo, gender, email, activeId);
        }
        
        public int EditComponentSOAP(string compId, string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus) {
            return base.Channel.EditComponentSOAP(compId, name, priceToDisp, availability, description, image, category, compatibilityStatus);
        }
        
        public System.Threading.Tasks.Task<int> EditComponentSOAPAsync(string compId, string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus) {
            return base.Channel.EditComponentSOAPAsync(compId, name, priceToDisp, availability, description, image, category, compatibilityStatus);
        }
        
        public int UpdateStockSOAP(string componentId, string updateType, string quantity) {
            return base.Channel.UpdateStockSOAP(componentId, updateType, quantity);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStockSOAPAsync(string componentId, string updateType, string quantity) {
            return base.Channel.UpdateStockSOAPAsync(componentId, updateType, quantity);
        }
        
        public int FulfilOrderSOAP(string orderId) {
            return base.Channel.FulfilOrderSOAP(orderId);
        }
        
        public System.Threading.Tasks.Task<int> FulfilOrderSOAPAsync(string orderId) {
            return base.Channel.FulfilOrderSOAPAsync(orderId);
        }
        
        public int RejectOrderSOAP(string orderId, string reason) {
            return base.Channel.RejectOrderSOAP(orderId, reason);
        }
        
        public System.Threading.Tasks.Task<int> RejectOrderSOAPAsync(string orderId, string reason) {
            return base.Channel.RejectOrderSOAPAsync(orderId, reason);
        }
        
        public Front_end.ServiceReference.CompatibilityClass VerifyBuildCompatibilitySOAP(string desktopBaseId, string ram, string cpu, string storage, string graphics) {
            return base.Channel.VerifyBuildCompatibilitySOAP(desktopBaseId, ram, cpu, storage, graphics);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.CompatibilityClass> VerifyBuildCompatibilitySOAPAsync(string desktopBaseId, string ram, string cpu, string storage, string graphics) {
            return base.Channel.VerifyBuildCompatibilitySOAPAsync(desktopBaseId, ram, cpu, storage, graphics);
        }
        
        public int DeleteUserSOAP(string activeId) {
            return base.Channel.DeleteUserSOAP(activeId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserSOAPAsync(string activeId) {
            return base.Channel.DeleteUserSOAPAsync(activeId);
        }
        
        public int DeleteComponentSOAP(string compId) {
            return base.Channel.DeleteComponentSOAP(compId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteComponentSOAPAsync(string compId) {
            return base.Channel.DeleteComponentSOAPAsync(compId);
        }
        
        public int StoreUserAddressSOAP(string userId, string country, string province, string city, string streetUnit, string name, string surname, string cellPhone, string email) {
            return base.Channel.StoreUserAddressSOAP(userId, country, province, city, streetUnit, name, surname, cellPhone, email);
        }
        
        public System.Threading.Tasks.Task<int> StoreUserAddressSOAPAsync(string userId, string country, string province, string city, string streetUnit, string name, string surname, string cellPhone, string email) {
            return base.Channel.StoreUserAddressSOAPAsync(userId, country, province, city, streetUnit, name, surname, cellPhone, email);
        }
        
        public Front_end.ServiceReference.User FetchActiveUserSOAP(string id) {
            return base.Channel.FetchActiveUserSOAP(id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.User> FetchActiveUserSOAPAsync(string id) {
            return base.Channel.FetchActiveUserSOAPAsync(id);
        }
        
        public Front_end.ServiceReference.Component[] FetchSingleUserBuildSOAP(string user_id) {
            return base.Channel.FetchSingleUserBuildSOAP(user_id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchSingleUserBuildSOAPAsync(string user_id) {
            return base.Channel.FetchSingleUserBuildSOAPAsync(user_id);
        }
        
        public Front_end.ServiceReference.User[] FetchAllUsersSOAP() {
            return base.Channel.FetchAllUsersSOAP();
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.User[]> FetchAllUsersSOAPAsync() {
            return base.Channel.FetchAllUsersSOAPAsync();
        }
        
        public Front_end.ServiceReference.Component[] FetchRandomComponentsSOAP(string size) {
            return base.Channel.FetchRandomComponentsSOAP(size);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchRandomComponentsSOAPAsync(string size) {
            return base.Channel.FetchRandomComponentsSOAPAsync(size);
        }
        
        public Front_end.ServiceReference.Component[] FetchComponentsByCategorySOAP(string category) {
            return base.Channel.FetchComponentsByCategorySOAP(category);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchComponentsByCategorySOAPAsync(string category) {
            return base.Channel.FetchComponentsByCategorySOAPAsync(category);
        }
        
        public Front_end.ServiceReference.Component[] FetchTopComponentsSOAP(string category, string size) {
            return base.Channel.FetchTopComponentsSOAP(category, size);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchTopComponentsSOAPAsync(string category, string size) {
            return base.Channel.FetchTopComponentsSOAPAsync(category, size);
        }
        
        public Front_end.ServiceReference.Component[] FetchBuildSOAP(string build_id) {
            return base.Channel.FetchBuildSOAP(build_id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchBuildSOAPAsync(string build_id) {
            return base.Channel.FetchBuildSOAPAsync(build_id);
        }
        
        public Front_end.ServiceReference.Component FetchComponentSOAP(string component_id) {
            return base.Channel.FetchComponentSOAP(component_id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component> FetchComponentSOAPAsync(string component_id) {
            return base.Channel.FetchComponentSOAPAsync(component_id);
        }
        
        public Front_end.ServiceReference.Component[] FetchSingleComponentByImageSOAP(string image) {
            return base.Channel.FetchSingleComponentByImageSOAP(image);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchSingleComponentByImageSOAPAsync(string image) {
            return base.Channel.FetchSingleComponentByImageSOAPAsync(image);
        }
        
        public int CreateComponentSOAP(string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus) {
            return base.Channel.CreateComponentSOAP(name, priceToDisp, availability, description, image, category, compatibilityStatus);
        }
        
        public System.Threading.Tasks.Task<int> CreateComponentSOAPAsync(string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus) {
            return base.Channel.CreateComponentSOAPAsync(name, priceToDisp, availability, description, image, category, compatibilityStatus);
        }
        
        public int CreateBuildSOAP(string user_id, string desktop_id, string cpu_id, string storage_id, string graphics_id, string ram_id, string compatibilityStatus, string totalPrice) {
            return base.Channel.CreateBuildSOAP(user_id, desktop_id, cpu_id, storage_id, graphics_id, ram_id, compatibilityStatus, totalPrice);
        }
        
        public System.Threading.Tasks.Task<int> CreateBuildSOAPAsync(string user_id, string desktop_id, string cpu_id, string storage_id, string graphics_id, string ram_id, string compatibilityStatus, string totalPrice) {
            return base.Channel.CreateBuildSOAPAsync(user_id, desktop_id, cpu_id, storage_id, graphics_id, ram_id, compatibilityStatus, totalPrice);
        }
        
        public Front_end.ServiceReference.BuildClass[] FetchAllUserBuildsSOAP(string user_id) {
            return base.Channel.FetchAllUserBuildsSOAP(user_id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.BuildClass[]> FetchAllUserBuildsSOAPAsync(string user_id) {
            return base.Channel.FetchAllUserBuildsSOAPAsync(user_id);
        }
        
        public Front_end.ServiceReference.DeliveryAddress FetchUserAddressSOAP(string userId) {
            return base.Channel.FetchUserAddressSOAP(userId);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.DeliveryAddress> FetchUserAddressSOAPAsync(string userId) {
            return base.Channel.FetchUserAddressSOAPAsync(userId);
        }
        
        public Front_end.ServiceReference.OrderClass FetchOrderSOAP(string userId, string orderId, string cardNumber) {
            return base.Channel.FetchOrderSOAP(userId, orderId, cardNumber);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.OrderClass> FetchOrderSOAPAsync(string userId, string orderId, string cardNumber) {
            return base.Channel.FetchOrderSOAPAsync(userId, orderId, cardNumber);
        }
        
        public Front_end.ServiceReference.Order FetchOrderByIdSOAP(string orderId) {
            return base.Channel.FetchOrderByIdSOAP(orderId);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Order> FetchOrderByIdSOAPAsync(string orderId) {
            return base.Channel.FetchOrderByIdSOAPAsync(orderId);
        }
        
        public Front_end.ServiceReference.Compatibility FetchCaseCompatibilitySOAP(string componentId) {
            return base.Channel.FetchCaseCompatibilitySOAP(componentId);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Compatibility> FetchCaseCompatibilitySOAPAsync(string componentId) {
            return base.Channel.FetchCaseCompatibilitySOAPAsync(componentId);
        }
        
        public Front_end.ServiceReference.Order[] FetchAllUserOrdersSOAP(string userId) {
            return base.Channel.FetchAllUserOrdersSOAP(userId);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Order[]> FetchAllUserOrdersSOAPAsync(string userId) {
            return base.Channel.FetchAllUserOrdersSOAPAsync(userId);
        }
        
        public Front_end.ServiceReference.Order[] FetchAllOrdersSOAP(string filter) {
            return base.Channel.FetchAllOrdersSOAP(filter);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Order[]> FetchAllOrdersSOAPAsync(string filter) {
            return base.Channel.FetchAllOrdersSOAPAsync(filter);
        }
        
        public int CheckoutOrderSOAP(string userId, string orderId, string cardId, string paymentId, string userAddressId, string totalPrice, string totalItems, string paymentMade, string orderStatus, int[] listOfCartItemId) {
            return base.Channel.CheckoutOrderSOAP(userId, orderId, cardId, paymentId, userAddressId, totalPrice, totalItems, paymentMade, orderStatus, listOfCartItemId);
        }
        
        public System.Threading.Tasks.Task<int> CheckoutOrderSOAPAsync(string userId, string orderId, string cardId, string paymentId, string userAddressId, string totalPrice, string totalItems, string paymentMade, string orderStatus, int[] listOfCartItemId) {
            return base.Channel.CheckoutOrderSOAPAsync(userId, orderId, cardId, paymentId, userAddressId, totalPrice, totalItems, paymentMade, orderStatus, listOfCartItemId);
        }
        
        public int SaveCartSOAP(string userId, string buildId, string totalPrice, string discountSaved) {
            return base.Channel.SaveCartSOAP(userId, buildId, totalPrice, discountSaved);
        }
        
        public System.Threading.Tasks.Task<int> SaveCartSOAPAsync(string userId, string buildId, string totalPrice, string discountSaved) {
            return base.Channel.SaveCartSOAPAsync(userId, buildId, totalPrice, discountSaved);
        }
        
        public int SaveCartItemsSOAP(string componentId, string cartId, string quantity) {
            return base.Channel.SaveCartItemsSOAP(componentId, cartId, quantity);
        }
        
        public System.Threading.Tasks.Task<int> SaveCartItemsSOAPAsync(string componentId, string cartId, string quantity) {
            return base.Channel.SaveCartItemsSOAPAsync(componentId, cartId, quantity);
        }
        
        public int SaveOrderSOAP(string cartId, string userAddressId, string userId) {
            return base.Channel.SaveOrderSOAP(cartId, userAddressId, userId);
        }
        
        public System.Threading.Tasks.Task<int> SaveOrderSOAPAsync(string cartId, string userAddressId, string userId) {
            return base.Channel.SaveOrderSOAPAsync(cartId, userAddressId, userId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IServiceREST")]
    public interface IServiceREST {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/Login", ReplyAction="http://tempuri.org/IServiceREST/LoginResponse")]
        Front_end.ServiceReference.UserClass Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/Login", ReplyAction="http://tempuri.org/IServiceREST/LoginResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.UserClass> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/Register", ReplyAction="http://tempuri.org/IServiceREST/RegisterResponse")]
        int Register(string name, string surname, string cellNo, string gender, string email, string password, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/Register", ReplyAction="http://tempuri.org/IServiceREST/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(string name, string surname, string cellNo, string gender, string email, string password, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/EditUser", ReplyAction="http://tempuri.org/IServiceREST/EditUserResponse")]
        int EditUser(string name, string surname, string cellNo, string gender, string email, string activeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/EditUser", ReplyAction="http://tempuri.org/IServiceREST/EditUserResponse")]
        System.Threading.Tasks.Task<int> EditUserAsync(string name, string surname, string cellNo, string gender, string email, string activeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/EditComponent", ReplyAction="http://tempuri.org/IServiceREST/EditComponentResponse")]
        int EditComponent(string compId, string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/EditComponent", ReplyAction="http://tempuri.org/IServiceREST/EditComponentResponse")]
        System.Threading.Tasks.Task<int> EditComponentAsync(string compId, string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/UpdateStock", ReplyAction="http://tempuri.org/IServiceREST/UpdateStockResponse")]
        int UpdateStock(string componentId, string updateType, string quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/UpdateStock", ReplyAction="http://tempuri.org/IServiceREST/UpdateStockResponse")]
        System.Threading.Tasks.Task<int> UpdateStockAsync(string componentId, string updateType, string quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FulfilOrder", ReplyAction="http://tempuri.org/IServiceREST/FulfilOrderResponse")]
        int FulfilOrder(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FulfilOrder", ReplyAction="http://tempuri.org/IServiceREST/FulfilOrderResponse")]
        System.Threading.Tasks.Task<int> FulfilOrderAsync(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/RejectOrder", ReplyAction="http://tempuri.org/IServiceREST/RejectOrderResponse")]
        int RejectOrder(string orderId, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/RejectOrder", ReplyAction="http://tempuri.org/IServiceREST/RejectOrderResponse")]
        System.Threading.Tasks.Task<int> RejectOrderAsync(string orderId, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/VerifyBuildCompatibility", ReplyAction="http://tempuri.org/IServiceREST/VerifyBuildCompatibilityResponse")]
        Front_end.ServiceReference.CompatibilityClass VerifyBuildCompatibility(string desktopBaseId, string ram, string cpu, string storage, string graphics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/VerifyBuildCompatibility", ReplyAction="http://tempuri.org/IServiceREST/VerifyBuildCompatibilityResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.CompatibilityClass> VerifyBuildCompatibilityAsync(string desktopBaseId, string ram, string cpu, string storage, string graphics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/DeleteUser", ReplyAction="http://tempuri.org/IServiceREST/DeleteUserResponse")]
        int DeleteUser(string activeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/DeleteUser", ReplyAction="http://tempuri.org/IServiceREST/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(string activeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/DeleteComponent", ReplyAction="http://tempuri.org/IServiceREST/DeleteComponentResponse")]
        int DeleteComponent(string compId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/DeleteComponent", ReplyAction="http://tempuri.org/IServiceREST/DeleteComponentResponse")]
        System.Threading.Tasks.Task<int> DeleteComponentAsync(string compId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/SendMail", ReplyAction="http://tempuri.org/IServiceREST/SendMailResponse")]
        int SendMail(string receiverEmail, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/SendMail", ReplyAction="http://tempuri.org/IServiceREST/SendMailResponse")]
        System.Threading.Tasks.Task<int> SendMailAsync(string receiverEmail, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/SaveOrder", ReplyAction="http://tempuri.org/IServiceREST/SaveOrderResponse")]
        int SaveOrder(string cartId, string userAddressId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/SaveOrder", ReplyAction="http://tempuri.org/IServiceREST/SaveOrderResponse")]
        System.Threading.Tasks.Task<int> SaveOrderAsync(string cartId, string userAddressId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/CheckoutOrder", ReplyAction="http://tempuri.org/IServiceREST/CheckoutOrderResponse")]
        int CheckoutOrder(string userId, string orderId, string cardId, string paymentId, string userAddressId, string totalPrice, string totalItems, string paymentMade, string orderStatus, int[] listOfCartItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/CheckoutOrder", ReplyAction="http://tempuri.org/IServiceREST/CheckoutOrderResponse")]
        System.Threading.Tasks.Task<int> CheckoutOrderAsync(string userId, string orderId, string cardId, string paymentId, string userAddressId, string totalPrice, string totalItems, string paymentMade, string orderStatus, int[] listOfCartItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/StoreUserAddress", ReplyAction="http://tempuri.org/IServiceREST/StoreUserAddressResponse")]
        int StoreUserAddress(string userId, string country, string province, string city, string streetUnit, string name, string surname, string cellPhone, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/StoreUserAddress", ReplyAction="http://tempuri.org/IServiceREST/StoreUserAddressResponse")]
        System.Threading.Tasks.Task<int> StoreUserAddressAsync(string userId, string country, string province, string city, string streetUnit, string name, string surname, string cellPhone, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/CreateComponent", ReplyAction="http://tempuri.org/IServiceREST/CreateComponentResponse")]
        int CreateComponent(string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/CreateComponent", ReplyAction="http://tempuri.org/IServiceREST/CreateComponentResponse")]
        System.Threading.Tasks.Task<int> CreateComponentAsync(string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/CreateBuild", ReplyAction="http://tempuri.org/IServiceREST/CreateBuildResponse")]
        int CreateBuild(string user_id, string desktop_id, string cpu_id, string storage_id, string graphics_id, string ram_id, string compatibilityStatus, string totalPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/CreateBuild", ReplyAction="http://tempuri.org/IServiceREST/CreateBuildResponse")]
        System.Threading.Tasks.Task<int> CreateBuildAsync(string user_id, string desktop_id, string cpu_id, string storage_id, string graphics_id, string ram_id, string compatibilityStatus, string totalPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchActiveUser", ReplyAction="http://tempuri.org/IServiceREST/FetchActiveUserResponse")]
        Front_end.ServiceReference.User FetchActiveUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchActiveUser", ReplyAction="http://tempuri.org/IServiceREST/FetchActiveUserResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.User> FetchActiveUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchComponent", ReplyAction="http://tempuri.org/IServiceREST/FetchComponentResponse")]
        Front_end.ServiceReference.Component FetchComponent(string component_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchComponent", ReplyAction="http://tempuri.org/IServiceREST/FetchComponentResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component> FetchComponentAsync(string component_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchSingleUserBuild", ReplyAction="http://tempuri.org/IServiceREST/FetchSingleUserBuildResponse")]
        Front_end.ServiceReference.Component[] FetchSingleUserBuild(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchSingleUserBuild", ReplyAction="http://tempuri.org/IServiceREST/FetchSingleUserBuildResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchSingleUserBuildAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchRandomComponents", ReplyAction="http://tempuri.org/IServiceREST/FetchRandomComponentsResponse")]
        Front_end.ServiceReference.Component[] FetchRandomComponents(string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchRandomComponents", ReplyAction="http://tempuri.org/IServiceREST/FetchRandomComponentsResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchRandomComponentsAsync(string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchTopComponents", ReplyAction="http://tempuri.org/IServiceREST/FetchTopComponentsResponse")]
        Front_end.ServiceReference.Component[] FetchTopComponents(string category, string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchTopComponents", ReplyAction="http://tempuri.org/IServiceREST/FetchTopComponentsResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchTopComponentsAsync(string category, string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchComponentsByCategory", ReplyAction="http://tempuri.org/IServiceREST/FetchComponentsByCategoryResponse")]
        Front_end.ServiceReference.Component[] FetchComponentsByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchComponentsByCategory", ReplyAction="http://tempuri.org/IServiceREST/FetchComponentsByCategoryResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchComponentsByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchBuild", ReplyAction="http://tempuri.org/IServiceREST/FetchBuildResponse")]
        Front_end.ServiceReference.Component[] FetchBuild(string build_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchBuild", ReplyAction="http://tempuri.org/IServiceREST/FetchBuildResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchBuildAsync(string build_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchAllUserBuilds", ReplyAction="http://tempuri.org/IServiceREST/FetchAllUserBuildsResponse")]
        Front_end.ServiceReference.BuildClass[] FetchAllUserBuilds(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchAllUserBuilds", ReplyAction="http://tempuri.org/IServiceREST/FetchAllUserBuildsResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.BuildClass[]> FetchAllUserBuildsAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchUserAddress", ReplyAction="http://tempuri.org/IServiceREST/FetchUserAddressResponse")]
        Front_end.ServiceReference.DeliveryAddress FetchUserAddress(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchUserAddress", ReplyAction="http://tempuri.org/IServiceREST/FetchUserAddressResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.DeliveryAddress> FetchUserAddressAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchOrder", ReplyAction="http://tempuri.org/IServiceREST/FetchOrderResponse")]
        Front_end.ServiceReference.OrderClass FetchOrder(string userId, string orderId, string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchOrder", ReplyAction="http://tempuri.org/IServiceREST/FetchOrderResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.OrderClass> FetchOrderAsync(string userId, string orderId, string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchAllUserOrders", ReplyAction="http://tempuri.org/IServiceREST/FetchAllUserOrdersResponse")]
        Front_end.ServiceReference.Order[] FetchAllUserOrders(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchAllUserOrders", ReplyAction="http://tempuri.org/IServiceREST/FetchAllUserOrdersResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Order[]> FetchAllUserOrdersAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchSingleComponentByImage", ReplyAction="http://tempuri.org/IServiceREST/FetchSingleComponentByImageResponse")]
        Front_end.ServiceReference.Component[] FetchSingleComponentByImage(string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchSingleComponentByImage", ReplyAction="http://tempuri.org/IServiceREST/FetchSingleComponentByImageResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchSingleComponentByImageAsync(string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchAllOrders", ReplyAction="http://tempuri.org/IServiceREST/FetchAllOrdersResponse")]
        Front_end.ServiceReference.Order[] FetchAllOrders(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchAllOrders", ReplyAction="http://tempuri.org/IServiceREST/FetchAllOrdersResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Order[]> FetchAllOrdersAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchOrderById", ReplyAction="http://tempuri.org/IServiceREST/FetchOrderByIdResponse")]
        Front_end.ServiceReference.Order FetchOrderById(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/FetchOrderById", ReplyAction="http://tempuri.org/IServiceREST/FetchOrderByIdResponse")]
        System.Threading.Tasks.Task<Front_end.ServiceReference.Order> FetchOrderByIdAsync(string orderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRESTChannel : Front_end.ServiceReference.IServiceREST, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRESTClient : System.ServiceModel.ClientBase<Front_end.ServiceReference.IServiceREST>, Front_end.ServiceReference.IServiceREST {
        
        public ServiceRESTClient() {
        }
        
        public ServiceRESTClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceRESTClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRESTClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRESTClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Front_end.ServiceReference.UserClass Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.UserClass> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public int Register(string name, string surname, string cellNo, string gender, string email, string password, string userType) {
            return base.Channel.Register(name, surname, cellNo, gender, email, password, userType);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(string name, string surname, string cellNo, string gender, string email, string password, string userType) {
            return base.Channel.RegisterAsync(name, surname, cellNo, gender, email, password, userType);
        }
        
        public int EditUser(string name, string surname, string cellNo, string gender, string email, string activeId) {
            return base.Channel.EditUser(name, surname, cellNo, gender, email, activeId);
        }
        
        public System.Threading.Tasks.Task<int> EditUserAsync(string name, string surname, string cellNo, string gender, string email, string activeId) {
            return base.Channel.EditUserAsync(name, surname, cellNo, gender, email, activeId);
        }
        
        public int EditComponent(string compId, string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus) {
            return base.Channel.EditComponent(compId, name, priceToDisp, availability, description, image, category, compatibilityStatus);
        }
        
        public System.Threading.Tasks.Task<int> EditComponentAsync(string compId, string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus) {
            return base.Channel.EditComponentAsync(compId, name, priceToDisp, availability, description, image, category, compatibilityStatus);
        }
        
        public int UpdateStock(string componentId, string updateType, string quantity) {
            return base.Channel.UpdateStock(componentId, updateType, quantity);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStockAsync(string componentId, string updateType, string quantity) {
            return base.Channel.UpdateStockAsync(componentId, updateType, quantity);
        }
        
        public int FulfilOrder(string orderId) {
            return base.Channel.FulfilOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<int> FulfilOrderAsync(string orderId) {
            return base.Channel.FulfilOrderAsync(orderId);
        }
        
        public int RejectOrder(string orderId, string reason) {
            return base.Channel.RejectOrder(orderId, reason);
        }
        
        public System.Threading.Tasks.Task<int> RejectOrderAsync(string orderId, string reason) {
            return base.Channel.RejectOrderAsync(orderId, reason);
        }
        
        public Front_end.ServiceReference.CompatibilityClass VerifyBuildCompatibility(string desktopBaseId, string ram, string cpu, string storage, string graphics) {
            return base.Channel.VerifyBuildCompatibility(desktopBaseId, ram, cpu, storage, graphics);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.CompatibilityClass> VerifyBuildCompatibilityAsync(string desktopBaseId, string ram, string cpu, string storage, string graphics) {
            return base.Channel.VerifyBuildCompatibilityAsync(desktopBaseId, ram, cpu, storage, graphics);
        }
        
        public int DeleteUser(string activeId) {
            return base.Channel.DeleteUser(activeId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(string activeId) {
            return base.Channel.DeleteUserAsync(activeId);
        }
        
        public int DeleteComponent(string compId) {
            return base.Channel.DeleteComponent(compId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteComponentAsync(string compId) {
            return base.Channel.DeleteComponentAsync(compId);
        }
        
        public int SendMail(string receiverEmail, string subject, string body) {
            return base.Channel.SendMail(receiverEmail, subject, body);
        }
        
        public System.Threading.Tasks.Task<int> SendMailAsync(string receiverEmail, string subject, string body) {
            return base.Channel.SendMailAsync(receiverEmail, subject, body);
        }
        
        public int SaveOrder(string cartId, string userAddressId, string userId) {
            return base.Channel.SaveOrder(cartId, userAddressId, userId);
        }
        
        public System.Threading.Tasks.Task<int> SaveOrderAsync(string cartId, string userAddressId, string userId) {
            return base.Channel.SaveOrderAsync(cartId, userAddressId, userId);
        }
        
        public int CheckoutOrder(string userId, string orderId, string cardId, string paymentId, string userAddressId, string totalPrice, string totalItems, string paymentMade, string orderStatus, int[] listOfCartItemId) {
            return base.Channel.CheckoutOrder(userId, orderId, cardId, paymentId, userAddressId, totalPrice, totalItems, paymentMade, orderStatus, listOfCartItemId);
        }
        
        public System.Threading.Tasks.Task<int> CheckoutOrderAsync(string userId, string orderId, string cardId, string paymentId, string userAddressId, string totalPrice, string totalItems, string paymentMade, string orderStatus, int[] listOfCartItemId) {
            return base.Channel.CheckoutOrderAsync(userId, orderId, cardId, paymentId, userAddressId, totalPrice, totalItems, paymentMade, orderStatus, listOfCartItemId);
        }
        
        public int StoreUserAddress(string userId, string country, string province, string city, string streetUnit, string name, string surname, string cellPhone, string email) {
            return base.Channel.StoreUserAddress(userId, country, province, city, streetUnit, name, surname, cellPhone, email);
        }
        
        public System.Threading.Tasks.Task<int> StoreUserAddressAsync(string userId, string country, string province, string city, string streetUnit, string name, string surname, string cellPhone, string email) {
            return base.Channel.StoreUserAddressAsync(userId, country, province, city, streetUnit, name, surname, cellPhone, email);
        }
        
        public int CreateComponent(string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus) {
            return base.Channel.CreateComponent(name, priceToDisp, availability, description, image, category, compatibilityStatus);
        }
        
        public System.Threading.Tasks.Task<int> CreateComponentAsync(string name, string priceToDisp, string availability, string description, string image, string category, string compatibilityStatus) {
            return base.Channel.CreateComponentAsync(name, priceToDisp, availability, description, image, category, compatibilityStatus);
        }
        
        public int CreateBuild(string user_id, string desktop_id, string cpu_id, string storage_id, string graphics_id, string ram_id, string compatibilityStatus, string totalPrice) {
            return base.Channel.CreateBuild(user_id, desktop_id, cpu_id, storage_id, graphics_id, ram_id, compatibilityStatus, totalPrice);
        }
        
        public System.Threading.Tasks.Task<int> CreateBuildAsync(string user_id, string desktop_id, string cpu_id, string storage_id, string graphics_id, string ram_id, string compatibilityStatus, string totalPrice) {
            return base.Channel.CreateBuildAsync(user_id, desktop_id, cpu_id, storage_id, graphics_id, ram_id, compatibilityStatus, totalPrice);
        }
        
        public Front_end.ServiceReference.User FetchActiveUser(string id) {
            return base.Channel.FetchActiveUser(id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.User> FetchActiveUserAsync(string id) {
            return base.Channel.FetchActiveUserAsync(id);
        }
        
        public Front_end.ServiceReference.Component FetchComponent(string component_id) {
            return base.Channel.FetchComponent(component_id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component> FetchComponentAsync(string component_id) {
            return base.Channel.FetchComponentAsync(component_id);
        }
        
        public Front_end.ServiceReference.Component[] FetchSingleUserBuild(string user_id) {
            return base.Channel.FetchSingleUserBuild(user_id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchSingleUserBuildAsync(string user_id) {
            return base.Channel.FetchSingleUserBuildAsync(user_id);
        }
        
        public Front_end.ServiceReference.Component[] FetchRandomComponents(string size) {
            return base.Channel.FetchRandomComponents(size);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchRandomComponentsAsync(string size) {
            return base.Channel.FetchRandomComponentsAsync(size);
        }
        
        public Front_end.ServiceReference.Component[] FetchTopComponents(string category, string size) {
            return base.Channel.FetchTopComponents(category, size);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchTopComponentsAsync(string category, string size) {
            return base.Channel.FetchTopComponentsAsync(category, size);
        }
        
        public Front_end.ServiceReference.Component[] FetchComponentsByCategory(string category) {
            return base.Channel.FetchComponentsByCategory(category);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchComponentsByCategoryAsync(string category) {
            return base.Channel.FetchComponentsByCategoryAsync(category);
        }
        
        public Front_end.ServiceReference.Component[] FetchBuild(string build_id) {
            return base.Channel.FetchBuild(build_id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchBuildAsync(string build_id) {
            return base.Channel.FetchBuildAsync(build_id);
        }
        
        public Front_end.ServiceReference.BuildClass[] FetchAllUserBuilds(string user_id) {
            return base.Channel.FetchAllUserBuilds(user_id);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.BuildClass[]> FetchAllUserBuildsAsync(string user_id) {
            return base.Channel.FetchAllUserBuildsAsync(user_id);
        }
        
        public Front_end.ServiceReference.DeliveryAddress FetchUserAddress(string userId) {
            return base.Channel.FetchUserAddress(userId);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.DeliveryAddress> FetchUserAddressAsync(string userId) {
            return base.Channel.FetchUserAddressAsync(userId);
        }
        
        public Front_end.ServiceReference.OrderClass FetchOrder(string userId, string orderId, string cardNumber) {
            return base.Channel.FetchOrder(userId, orderId, cardNumber);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.OrderClass> FetchOrderAsync(string userId, string orderId, string cardNumber) {
            return base.Channel.FetchOrderAsync(userId, orderId, cardNumber);
        }
        
        public Front_end.ServiceReference.Order[] FetchAllUserOrders(string userId) {
            return base.Channel.FetchAllUserOrders(userId);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Order[]> FetchAllUserOrdersAsync(string userId) {
            return base.Channel.FetchAllUserOrdersAsync(userId);
        }
        
        public Front_end.ServiceReference.Component[] FetchSingleComponentByImage(string image) {
            return base.Channel.FetchSingleComponentByImage(image);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Component[]> FetchSingleComponentByImageAsync(string image) {
            return base.Channel.FetchSingleComponentByImageAsync(image);
        }
        
        public Front_end.ServiceReference.Order[] FetchAllOrders(string filter) {
            return base.Channel.FetchAllOrders(filter);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Order[]> FetchAllOrdersAsync(string filter) {
            return base.Channel.FetchAllOrdersAsync(filter);
        }
        
        public Front_end.ServiceReference.Order FetchOrderById(string orderId) {
            return base.Channel.FetchOrderById(orderId);
        }
        
        public System.Threading.Tasks.Task<Front_end.ServiceReference.Order> FetchOrderByIdAsync(string orderId) {
            return base.Channel.FetchOrderByIdAsync(orderId);
        }
    }
}
